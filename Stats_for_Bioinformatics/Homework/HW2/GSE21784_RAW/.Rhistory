grep("q10.norm.red|q10.norm.yellow",Lmaps$trait, value = T),
grep("q25.norm.red|q25.norm.yellow",Lmaps$trait, value = T),
grep("mean.norm.red|mean.norm.yellow",Lmaps$trait, value = T),
grep("median.norm.red|median.norm.yellow",Lmaps$trait, value = T),
grep("q75.norm.red|q75.norm.yellow",Lmaps$trait, value = T),
grep("q90.norm.red|q90.norm.yellow",Lmaps$trait, value = T),
grep("resid.q10.EXT|resid.q10.TOF|resid.q10.red|resid.q10.yellow",Lmaps$trait, value = T ),
grep("resid.q25.EXT|resid.q25.TOF|resid.q25.red|resid.q25.yellow",Lmaps$trait, value = T ),
grep("resid.mean.EXT|resid.mean.TOF|resid.median.EXT|resid.median.TOF|resid.mean.red|resid.mean.yellow|resid.median.red|resid.median.yellow",Lmaps$trait, value = T ),
grep("resid.q75.EXT|resid.q75.TOF|resid.q75.red|resid.q75.yellow",Lmaps$trait, value = T ),
grep("resid.q90.EXT|resid.q90.TOF|resid.q90.red|resid.q90.yellow",Lmaps$trait, value = T ),
grep("resid.f.ad",Lmaps$trait, value = T ),
grep("q10.norm.EXT",Lmaps$trait, value = T),
grep("q25.norm.EXT",Lmaps$trait, value = T),
grep("mean.norm.EXT",Lmaps$trait, value = T),
grep("median.norm.EXT",Lmaps$trait, value = T),
grep("q75.norm.EXT",Lmaps$trait, value = T),
grep("q90.norm.EXT",Lmaps$trait, value = T),
grep("iqr.red|var.yellow|iqr.yellow|var.red",Lmaps$trait, value = T),
grep("iqr.EXT|var.TOF|iqr.TOF|var.EXT",Lmaps$trait, value = T)
))
PLotting_Fun <- function(mapDF, genoDF, phenoDF, Condition , LODcut, traitBYpos = TRUE, ciBYpos = TRUE, pBYg=TRUE){
presentation <- theme(axis.text.x = element_text(size=16, face="bold", color="black"),
axis.text.y = element_text(size=16, face="bold", color="black"),
axis.title.x = element_text(size=20, face="bold", color="black"),
axis.title.y = element_text(size=20, face="bold", color="black"),
strip.text.x = element_text(size=20, face="bold", color="black"),
strip.text.y = element_text(size=20, face="bold", color="black"),
plot.title = element_text(size=24, face="bold"))
pDF <- mapDF %>%
filter(grepl(Condition, trait))%>%
filter(grepl("resid",trait))%>%
group_by(trait)%>%
filter(LOD >= LODcut)
if(traitBYpos == TRUE){
tBp <- ggplot(pDF)+
aes(x = pos/1e6, y = trait1, color = LOD)+
scale_colour_gradientn(colours = topo.colors(4), limits =c(3,max(pDF$LOD)))+
geom_tile(size = 1)+
facet_grid(.~chr, drop =FALSE)+ presentation +
labs(y = "Trait", x = "Genomic Position (Mb)")
}
if(ciBYpos == TRUE){
cBp <-  pDF %>%
filter(!is.na(CI.L.marker))%>%
ggplot(.)+
aes(x = pos/1e6, y = trait1, size = ifelse(grepl("EXT",trait), "EXT",
ifelse(grepl("TOF",trait),"TOF",
ifelse(grepl("red|yellow",trait),"Fluorescent",
ifelse(grepl("f.|.n|^n",trait), "Brood" ,"3")))) ,
color = ifelse(grepl("EXT",trait), "EXT",
ifelse(grepl("TOF",trait),"TOF",
ifelse(grepl("red|yellow",trait),"Fluorescent",
ifelse(grepl("f.|.n|^n",trait), "Brood" ,"3")))))+
scale_color_manual(values=c("Fluorescent" = "red", "TOF" = "blue", "EXT" = "black", "Brood" = "green","3" = NA),name= "Trait Category")+
scale_size_manual(values=c("Fluorescent" = 1, "TOF" = 2, "EXT" = 3,  "Brood" = 4 ,"3" = NA),name= "Trait Category")+
geom_segment(mapping= aes(x = CI.L.pos/1e6, xend = CI.R.pos/1e6, yend=trait), alpha=.5)+
facet_grid(.~chr) + presentation+
labs(y = "Treatment Type", x = "Genomic Position (Mb)", title = "Confidence Intervals")+
theme(axis.text.y = element_text(size=12, face="bold", color="black"))
}
if(pBYg == TRUE){
pBYgDF <- mapDF %>%
filter(grepl(Condition, trait))%>%
filter(grepl("resid",trait))%>%
group_by(chr,trait)%>%
filter(!is.na(CI.L.pos))%>%
group_by(SNP)%>%
distinct(SNP)
phens <- phenoDF %>%
filter(trait%in%pBYgDF$trait)
TRsnp <- genoDF %>%
filter(snp%in%pBYgDF$SNP)
pBYgPLOTS <- list()
for(i in 1:length(pBYgDF$SNP)){
tsnp <- as.character(pBYgDF$SNP[i])
trt <- as.character(pBYgDF$trait[i])
tempP <- phens %>%
filter(trait%in%trt)
tempG <- TRsnp%>%
filter(snp == tsnp)%>%
filter(strain %in% tempP$strain)
tempP <- tempP%>%
filter(strain %in% tempG$strain | strain == "N2" | strain == "CB4856")%>%
left_join(.,tempG, by ="strain")%>%
mutate(color = ifelse(strain=="N2", "N2",
ifelse(strain == "CB4856", "CB4856",
ifelse(geno == 1, "RIAILs-N2",
ifelse(geno == 2, "RIAILs-CB",0)))),
label = ifelse(strain=="N2", "N2",
ifelse(strain == "CB4856", "CB4856",
ifelse(geno == 1, "RIAILs-N2",
ifelse(geno == 2, "RIAILs-CB",0)))))
pBYgPLOTS[[i]] <- ggplot(tempP)+
aes(x = label, y = value, fill = ifelse(strain=="N2", "N2",
ifelse(strain == "CB4856", "CB4856",
ifelse(geno == 1, "RIAILs-N2",
ifelse(geno == 2, "RIAILs-CB",0)))),
color = ifelse(strain=="N2", "N2",
ifelse(strain == "CB4856", "CB4856",
ifelse(geno == 1, "RIAILs-N2",
ifelse(geno == 2, "RIAILs-CB",0)))))+
scale_fill_manual(values = c("N2"="orange","CB4856"="blue","RIAILs-CB"="blue","RIAILs-N2"="orange"), name = "Genotype")+
geom_jitter(aes(color = ifelse(strain=="N2", "N2",
ifelse(strain == "CB4856", "CB4856",
ifelse(geno == 1, "RIAILs-N2",
ifelse(geno == 2, "RIAILs-CB",0))))))+
scale_color_manual(values = c("N2"="black","CB4856"="black","RIAILs-CB"="#666666","RIAILs-N2"="#666666"),name="Genotype")+
geom_boxplot(alpha=.7,outlier.colour = NA) +
presentation+
labs(x = "Background", y = tempP$trait, title = tempP$snp)
}
}
plots <- list(tBp,cBp,pBYgPLOTS)
return(plots)
}
plots <- PLotting_Fun(
mapDF = Lmaps,
genoDF = Lgeno,
phenoDF = Lphen,
LODcut = 3,
Condition= "DA837",
traitBYpos = TRUE,
ciBYpos = T,
pBYg = T)
plots[[1]]
plots <- PLotting_Fun(
mapDF = Lmaps,
genoDF = Lgeno,
phenoDF = Lphen,
LODcut = 3,
Condition= "etoposide",
traitBYpos = TRUE,
ciBYpos = T,
pBYg = T)
plots[[1]]
plots[[2]]
library(multtest)
library(SAM)
library(affy)
setwd("~/Northwestern/Courses/Stats_for_Bioinformatics/Homework/HW2/GSE21784_RAW/")
expd <- ReadAffy()
sampleNames(expd) <- c("L4_1","L4_2","L4_3", "Day6_1", "Day6_2","Day6_3","Day15_1","Day15_2","Day15_3")
enorm <- rma(expd)
write.exprs(enorm,"wormGrowth.txt")
exnorm <- read.table("wormGrowth.txt",sep="\t",skip=1)
colnames(exnorm) <- c("gene","L4_1","L4_2","L4_3", "Day6_1", "Day6_2","Day6_3","Day15_1","Day15_2","Day15_3")
h3df <- exnorm[,1:7]
View(`h3df`)
h3.cl <-c(rep(0,3),rep(1,3))
teststat <- mt.teststat(h3df[,2:13],test="t.equalvar",h3.cl)   ###default is t test.
teststat <- mt.teststat(h3df[,2:7],test="t.equalvar",h3.cl)   ###default is t test.
rawp0<-2*(1-pt(abs(teststat),df=10))
procs <- c("Bonferroni", "Holm", "Hochberg", "SidakSS", "SidakSD","BH", "BY")
res <- mt.rawp2adjp(rawp0, procs)
View(res[[1]])
adjp <- res$adjp[order(res$index), ]
adjp <- round(adjp[1:10, ], 2)
View(adjp)
resT <- mt.maxT(h3df[,2:7],h3.cl,B=2000) #pvalue is in decreasing order
View(resT)
ord <- order(res$index)  ##recover to original gene order
rawp <- resT$rawp[ord]   ##raw pvalue from permutation test
maxT <- resT$adjp[ord]   ##adjusted p-value from permutation test
View(adjp)
adjp <- res$adjp[order(res$index), ]
View(adjp)
adjp <- round(adjp, 2)
View(adjp)
adjp <- round(adjp, 4)
View(adjp)
adjp <- res$adjp[order(res$index), ]
###round the adjusted p-value to the second decimal places
adjp <- round(adjp, 4)
View(adjp)
adjp <- res$adjp[order(res$index), ]
###round the adjusted p-value to the second decimal places
adjp <- round(adjp, 8)
View(adjp)
###permutation based
resT <- mt.maxT(h3df[,2:7],h3.cl,B=2000) #pvalue is in decreasing order
ord <- order(res$index)  ##recover to original gene order
rawp <- resT$rawp[ord]   ##raw pvalue from permutation test
maxT <- resT$adjp[ord]   ##adjusted p-value from permutation test
View(res[[1]])
View(res[[2]])
View(res[[3]])
View(res[[4]])
View(adjp)
View(adjp)
bnh <- res[[1]]$Hochberg
bnh <- res[[1]]["Hochberg"]
bnh <- res[[1]][,"Hochberg"]
bnh <- data.frame(hoch = res[[1]][,"Hochberg"])
View(bnh)
row.names(bnh)
?desc
View(adjp)
bnh <- data.frame(hoch = desc(res[[1]][,"Hochberg"]))
View(bnh)
View(adjp)
adjp <- res$adjp[order(res$index), ]
###round the adjusted p-value to the second decimal places
adjp <- round(adjp, 12)
bnh <- data.frame(hoch = order(adjp$Hochberg))
bnh <- data.frame(hoch = order(adjp["Hochberg"]))
View(bnh)
adjp <- data.frame(res$adjp[order(res$index), ])
###round the adjusted p-value to the second decimal places
adjp <- round(adjp, 12)
View(adjp)
bnh <- data.frame(hoch = order(adjp$%Hochberg]))
bnh <- data.frame(hoch = order(adjp$%Hochberg))
bnh <- data.frame(hoch = sort(adjp$%Hochberg))
bnh <- data.frame(hoch = order(adjp$Hochberg))
View(bnh)
adjp$Hochberg
order(adjp$Hochberg)
bnh <- data.frame(hoch = desc(adjp$Hochberg))
View(bnh)
bnh <- data.frame(hoch = (adjp$Hochberg))
View(bnh)
adjp <- data.frame(res$adjp[order(res$index), ])
###round the adjusted p-value to the second decimal places
adjp <- round(adjp, 12)
bnh <- data.frame(hoch = (adjp$Hochberg))
View(bnh)
bnh <- data.frame(hoch = (adjp$Hochberg), index = c(1:nrow(adjp)))
View(bnh)
bnh$cutoff <- (bnh$index/nrow(bnh))/.05
View(bnh)
bnh <- data.frame(hoch = (adjp$Hochberg))
View(bnh)
bnh <- arrange(bnh, hoch)
View(bnh)
bnh$index <- c(1:nrow(bnh))
View(bnh)
bnh$cutoff <- (bnh$index/nrow(bnh))/.05
View(bnh)
diffexp <- filter(bnh, hoch < cutoff)
View(diffexp)
bnh <- data.frame(hoch = (adjp$Hochberg))
bnh <- arrange(bnh, desc(hoch))
View(bnh)
bnh$index <- c(1:nrow(bnh))
bnh$cutoff <- (bnh$index/nrow(bnh))/.05
diffexp <- filter(bnh, hoch < cutoff)
View(diffexp)
View(bnh)
bnh <- data.frame(hoch = (adjp$Hochberg))
bnh <- arrange(bnh, hoch)
bnh$index <- c(1:nrow(bnh))
bnh$cutoff <- (bnh$index/nrow(bnh))/.05
View(bnh)
bnh$fin <- ifelse(bnh$hoch < bnh$cutoff,1,0)
sum(bnh$fin)
bnh <- data.frame(hoch = (adjp$Hochberg))
bnh <- arrange(bnh, hoch)
bnh$index <- c(1:nrow(bnh))
bnh$cutoff <- (bnh$index/nrow(bnh))*.05
bnh$fin <- ifelse(bnh$hoch < bnh$cutoff,1,0)
sum(bnh$fin)
diffexp <- filter(bnh, fin == 1)
View(diffexp)
source("http://bioconductor.org/biocLite.R")
biocLite("siggenes")
library(siggenes)
samR <- sam(h3df,h3.cl)
samR <- sam(h3df[,2:7],h3.cl)
View(samR[[1]])
?sam
str(samR)
delta.plot(samR,.05)
?delta.plot
delta.plot(samR,.05)
siggenes::delta.plot(samR,.05)
samR <- sam(h3df[,2:7],h3.cl)
siggenes::delta.plot(samR,.05)
hm <- delta.plot(samR,.05)
plot(samR)
?plot
plot(samR, .05)
plot(samR, 8)
plot(samR, 7)
plot(samR, 5)
plot(samR, 3)
plot(samR, 1)
plot(samR, 2)
plot(samR, 1.5)
plot(samR, 1.4)
?sam
View(d)
View(samR$d)
View(samR[[d]])
View(samR[["d"]])
View(samR[])
View(samR["d"])
View(samR@d)
View(samR@s)
View(samR@p.value)
View(samR@vec.false)
sam.plot2(samR, 1.4)
sam.plot2(samR, 18)
sam.plot2(samR, 5)
install.packages("samr")
library(samr)
samR <- samr(h3df[,2:7],h3.cl)
library("samr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
source("http://bioconductor.org/biocLite.R")
biocLite("impute")
samR <- sam(h3df[,2:7],h3.cl)
delta.table <- samr.compute.delta.table(samR)
?samr
delta.table <- samr.compute.delta.table(samR)
samR <- samr(h3df[,2:7],h3.cl)
samR <- samr::samr(h3df[,2:7],h3.cl)
samR <- samr::samr(h3df[,2:7])
delta.table <- samr::samr.compute.delta.table(samR)
samR <- sam(h3df[,2:7],h3.cl)
hm <- delta.plot(samR,.05)
hm <- sam::delta.plot(samR,.05)
hm <- sam::delta.plot(samR)
?delta.plot
hm <- siggenes::delta.plot(samR)
plot(samR)
plot(samR)
sam.plot2(samR, 5)
samR <- samr(h3df[,2:7],h3.cl)
samR <- samr::samr(h3df[,2:7],h3.cl)
samR <- samr::samr(h3df[,2:7])
?samr
samR <- samr::samr(h3df[,2:7],  resp.type="Two class unpaired", nperms=100)
samR <- samr::samr(h3df[,2:7],  resp.type="Two class unpaired")
View(`h3df`)
df <- h3df[,2:7]
samr.obj <- samr::samr(df,  resp.type="Two class unpaired")
df <- as.matrix(h3df[,2:7])
samr.obj <- samr::samr(df,  resp.type="Two class unpaired")
samr.obj <- samr::samr(df,  resp.type="Two class unpaired")
View(df)
View(exnorm)
df <- as.matrix(h3df)
write.exprs(df,"wormGrowth.txt")
df <-data.frame(h3df)
write.exprs(df,"wormGrowth.txt")
samr.obj <- samr::samr(exnorm[,2:7],  resp.type="Two class unpaired")
View(exnorm)
exnorm <- read.table("wormGrowth.txt",sep="\t",skip=1)
samr.obj <- samr::samr(exnorm[,2:7],  resp.type="Two class unpaired")
expd <- ReadAffy()
enorm <- rma(expd)
write.exprs(enorm,"wormGrowth.txt")
exnorm <- read.table("wormGrowth.txt",sep="\t",skip=1)
samr.obj <- samr::samr(exnorm[,2:7],  resp.type="Two class unpaired")
exnorm <- exnorm[,2:7]
samr.obj <- samr::samr(exnorm[,2:7],  resp.type="Two class unpaired")
samr.obj <- samr::samr(exnorm,  resp.type="Two class unpaired")
View(exnorm)
summary(exnorm)
exnorm <- read.table("wormGrowth.txt",sep="\t",skip=1)
samr.obj <- samr::samr(exnorm,  resp.type="Two class unpaired")
samr.obj <- samr::samr(exnorm[,2:7],  resp.type="Two class unpaired")
View(exnorm)
exmat <- exnorm[,2:7]
exmat1 <- as.matrix(x = exmat, y = h3.cl)
View(exmat1)
str(exmat1)
samr.obj <- samr::samr(exnorm[,2:7],  resp.type="Two class unpaired")
exmat1 <- list(x=as.matrix(exmat), y = h3.cl, logged2=T)
samr.obj <- samr::samr(exmat1,  resp.type="Two class unpaired")
h3.cl <-c(rep(1,3),rep(2,3))
exmat1 <- list(x=as.matrix(exmat), y = h3.cl, logged2=T)
samr.obj <- samr::samr(exmat1,  resp.type="Two class unpaired")
delta.table <- samr.compute.delta.table(samr.obj, min.foldchange=0.1,nvals=200)
delta.table <- samr::samr.compute.delta.table(samr.obj, min.foldchange=0.1,nvals=200)
siggenes.table <- samr::samr.compute.siggenes.table(samr.obj, del=0, data, delta.table,all.genes=TRUE)
siggenes.table <- samr::samr.compute.siggenes.table(samr.obj, del=0, exmat1, delta.table,all.genes=TRUE)
samr.plot(samr.obj,del=.3)
samr::samr.plot(samr.obj,del=.3)
samr::samr.plot(samr.obj,del=5)
exmat <- exnorm[,c(2:4,7:12)]
exnorm <- read.table("wormGrowth.txt",sep="\t",skip=1)
exmat <- exnorm[,c(2:4,7:10)]
h3.cl <-c(rep(1,3),rep(2,3))
exmat1 <- list(x=as.matrix(exmat), y = h3.cl, logged2=T)
samr.obj <- samr::samr(exmat1,  resp.type="Two class unpaired")
samr::samr.plot(samr.obj,del=5)
samr::samr.plot(samr.obj,del=.1)
samr::samr.plot(samr.obj,del=1)
samr::samr.plot(samr.obj,del=.5)
delta.table <- samr::samr.compute.delta.table(samr.obj, min.foldchange=0.1,nvals=100)
View(delta.table)
exnorm <- read.table("wormGrowth.txt",sep="\t",skip=1)
colnames(exnorm) <- c("gene","L4_1","L4_2","L4_3", "Day6_1", "Day6_2","Day6_3","Day15_1","Day15_2","Day15_3")
h3.cl <-c(rep(0,3),rep(1,3))
h3df <- exnorm[,c(1,2:4,7:10)]
teststat <- mt.teststat(h3df[,2:7],test="t.equalvar",h3.cl)   ###default is t test.
rawp0<-2*(1-pt(abs(teststat),df=10))
procs <- c("Bonferroni", "Holm", "Hochberg", "SidakSS", "SidakSD","BH", "BY")
res <- mt.rawp2adjp(rawp0, procs)
adjp <- data.frame(res$adjp[order(res$index), ])
###round the adjusted p-value to the second decimal places
adjp <- round(adjp, 12)
bnh <- data.frame(hoch = (adjp$Hochberg))
bnh <- arrange(bnh, hoch)
bnh$index <- c(1:nrow(bnh))
bnh$cutoff <- (bnh$index/nrow(bnh))*.05
bnh$fin <- ifelse(bnh$hoch < bnh$cutoff,1,0)
diffexp <- filter(bnh, fin == 1)
samr::samr.plot(samr.obj,del=.5)
exnorm <- read.table("wormGrowth.txt",sep="\t",skip=1)
exmat <- exnorm[,c(2:4,7:10)]
h3.cl <-c(rep(1,3),rep(2,3))
exmat1 <- list(x=as.matrix(exmat), y = h3.cl, logged2=T)
samr.obj <- samr::samr(exmat1,  resp.type="Two class unpaired")
delta.table <- samr::samr.compute.delta.table(samr.obj, min.foldchange=0.1,nvals=100)
siggenes.table <- samr::samr.compute.siggenes.table(samr.obj, del=0, exmat1, delta.table,all.genes=TRUE)
View(delta.table)
samr::samr.plot(samr.obj,del=.5)
samr::samr.plot(samr.obj,del=9372652865)
samr::samr.plot(samr.obj,del=.9372652865)
exnorm <- read.table("wormGrowth.txt",sep="\t",skip=1)
colnames(exnorm) <- c("gene","L4_1","L4_2","L4_3", "Day6_1", "Day6_2","Day6_3","Day15_1","Day15_2","Day15_3")
h3.cl <-c(rep(0,3),rep(1,3))
h3df <- exnorm[,c(1,2:4,7:10)]
###calcuate the teststat
teststat <- mt.teststat(h3df[,2:7],test="t.equalvar",h3.cl)   ###default is t test.
rawp0<-2*(1-pt(abs(teststat),df=10))
procs <- c("Bonferroni", "Holm", "Hochberg", "SidakSS", "SidakSD","BH", "BY")
res <- mt.rawp2adjp(rawp0, procs)
adjp <- data.frame(res$adjp[order(res$index), ])
###round the adjusted p-value to the second decimal places
adjp <- round(adjp, 12)
bnh <- data.frame(hoch = (adjp$BH))
bnh <- arrange(bnh, hoch)
bnh$index <- c(1:nrow(bnh))
bnh$cutoff <- (bnh$index/nrow(bnh))*.05
bnh$fin <- ifelse(bnh$hoch < bnh$cutoff,1,0)
diffexp <- filter(bnh, fin == 1)
bnh <- data.frame(hoch = (adjp$BH))
bnh <- arrange(bnh, hoch)
View(bnh)
bnh$index <- c(1:nrow(bnh))
View(bnh)
?mt.rawp2adjp
View(adjp)
length(adjp$BH < .05)
length(adjp$BH < .005)
temp <- filter(adjp, BH < .05)
?pt
rawp0<-2*(1-pt(abs(teststat),df=7))
procs <- c("Bonferroni", "Holm", "Hochberg", "SidakSS", "SidakSD","BH", "BY")
res <- mt.rawp2adjp(rawp0, procs)
adjp <- data.frame(res$adjp[order(res$index), ])
###round the adjusted p-value to the second decimal places
adjp <- round(adjp, 12)
View(adjp)
temp <- filter(adjp, BH < .05)
setwd("~/Northwestern/Courses/Stats_for_Bioinformatics/Homework/HW2/GSE21784_RAW/")
setwd("~/Northwestern/Courses/Stats_for_Bioinformatics/Homework/HW2/GSE21784_RAW/")
expd <- ReadAffy()
View(delta.table)
View(adjp)
temp1 <- filter(adjp, Bonferroni < .05)
exnorm <- read.table("wormGrowth.txt",sep="\t",skip=1)
exnorm1 <- exnorm
colnames(exnorm1) <- c("gene","L4_1","L4_2","L4_3", "Day6_1", "Day6_2","Day6_3","Day15_1","Day15_2","Day15_3")
h3.cl <-c(rep(0,3),rep(1,3))
h3df <- exnorm1[,c(1,2:4,7:10)]
###calcuate the teststat
teststat <- mt.teststat(h3df[,2:7],test="t.equalvar",h3.cl)   ###default is t test.
rawp0<-2*(1-pt(abs(teststat),df=7))
rawp0<-2*(1-pt(abs(teststat),df=4))
procs <- c("Bonferroni", "Holm", "Hochberg", "SidakSS", "SidakSD","BH", "BY")
res <- mt.rawp2adjp(rawp0, procs)
adjp <- data.frame(res$adjp[order(res$index), ])
###round the adjusted p-value to the second decimal places
adjp <- round(adjp, 12)
temp <- filter(adjp, BH < .05)
temp1 <- filter(adjp, Bonferroni < .05)
exmat <- exnorm[,c(2:4,7:10)]
h3.cl <-c(rep(1,3),rep(2,3))
exmat1 <- list(x=as.matrix(exmat), y = h3.cl, logged2=T)
samr.obj <- samr::samr(exmat1,  resp.type="Two class unpaired")
delta.table <- samr::samr.compute.delta.table(samr.obj, min.foldchange=0.1,nvals=100)
siggenes.table <- samr::samr.compute.siggenes.table(samr.obj, del=0, exmat1, delta.table,all.genes=TRUE)
samr::samr.plot(samr.obj,del=.9372652865)
View(delta.table)
samr::samr.plot(samr.obj,del=.0.9212618985)
samr::samr.plot(samr.obj,del=0.9212618985)
View(delta.table)
siggenes.table <- samr::samr.compute.siggenes.table(samr.obj, del=0, exmat1, delta.table,all.genes=TRUE)
siggenes.table <- samr::samr.compute.siggenes.table(samr.obj, del=.1, exmat1, delta.table,all.genes=TRUE)
siggenes.table <- samr::samr.compute.siggenes.table(samr.obj, del=0.9212618985, exmat1, delta.table,all.genes=TRUE)
siggenes.table[[1]]
nrow(siggenes.table)
nrow(siggenes.table[[1]])
nrow(siggenes.table[[2]])
siggenes.table <- samr::samr.compute.siggenes.table(samr.obj, del=0.9212618985, exmat1, delta.table)
nrow(siggenes.table[[2]])
nrow(siggenes.table[[1]])
nrow(siggenes.table[[1]])+nrow(siggenes.table[[2]])
siggenes.table <- samr::samr.compute.siggenes.table(samr.obj, del=0.1, exmat1, delta.table)
nrow(siggenes.table[[1]])+nrow(siggenes.table[[2]]) # genes up + genes down
exmat <- exnorm[,c(2:4,7:10)]
h3.cl <-c(rep(1,3),rep(2,3))
exmat1 <- list(x=as.matrix(exmat), y = h3.cl, logged2=T)
samr.obj <- samr::samr(exmat1,  resp.type="Two class unpaired")
delta.table <- samr::samr.compute.delta.table(samr.obj, min.foldchange=0.1,nvals=100)
siggenes.table <- samr::samr.compute.siggenes.table(samr.obj, del=0.9212618985, exmat1, delta.table)
samr::samr.plot(samr.obj,del=0.9212618985)
nrow(siggenes.table[[1]])+nrow(siggenes.table[[2]])
